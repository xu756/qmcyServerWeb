// Code generated by goctl. DO NOT EDIT.
// Source: admin.pb

package admin

import (
	"context"

	"github.com/xu756/qmcy/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Content       = pb.Content
	ContentList   = pb.ContentList
	ContentReq    = pb.ContentReq
	ContentsReq   = pb.ContentsReq
	GetGroupReq   = pb.GetGroupReq
	Group         = pb.Group
	GroupList     = pb.GroupList
	GroupUserInfo = pb.GroupUserInfo
	Ok            = pb.Ok

	Admin interface {
		GetGroups(ctx context.Context, in *GetGroupReq, opts ...grpc.CallOption) (*GroupList, error)
		GetContent(ctx context.Context, in *ContentReq, opts ...grpc.CallOption) (*Content, error)
		GetContents(ctx context.Context, in *ContentsReq, opts ...grpc.CallOption) (*ContentList, error)
		AddContent(ctx context.Context, in *Content, opts ...grpc.CallOption) (*Ok, error)
		EditContent(ctx context.Context, in *Content, opts ...grpc.CallOption) (*Ok, error)
		DelContent(ctx context.Context, in *ContentReq, opts ...grpc.CallOption) (*Ok, error)
	}

	defaultAdmin struct {
		cli zrpc.Client
	}
)

func NewAdmin(cli zrpc.Client) Admin {
	return &defaultAdmin{
		cli: cli,
	}
}

func (m *defaultAdmin) GetGroups(ctx context.Context, in *GetGroupReq, opts ...grpc.CallOption) (*GroupList, error) {
	client := pb.NewAdminClient(m.cli.Conn())
	return client.GetGroups(ctx, in, opts...)
}

func (m *defaultAdmin) GetContent(ctx context.Context, in *ContentReq, opts ...grpc.CallOption) (*Content, error) {
	client := pb.NewAdminClient(m.cli.Conn())
	return client.GetContent(ctx, in, opts...)
}

func (m *defaultAdmin) GetContents(ctx context.Context, in *ContentsReq, opts ...grpc.CallOption) (*ContentList, error) {
	client := pb.NewAdminClient(m.cli.Conn())
	return client.GetContents(ctx, in, opts...)
}

func (m *defaultAdmin) AddContent(ctx context.Context, in *Content, opts ...grpc.CallOption) (*Ok, error) {
	client := pb.NewAdminClient(m.cli.Conn())
	return client.AddContent(ctx, in, opts...)
}

func (m *defaultAdmin) EditContent(ctx context.Context, in *Content, opts ...grpc.CallOption) (*Ok, error) {
	client := pb.NewAdminClient(m.cli.Conn())
	return client.EditContent(ctx, in, opts...)
}

func (m *defaultAdmin) DelContent(ctx context.Context, in *ContentReq, opts ...grpc.CallOption) (*Ok, error) {
	client := pb.NewAdminClient(m.cli.Conn())
	return client.DelContent(ctx, in, opts...)
}
